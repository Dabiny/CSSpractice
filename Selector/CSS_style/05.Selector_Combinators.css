/* Selector Combinators (선택자 결합)
    지금까지는 하나의 셀렉터를 특정해서 골랐지만 선택자 결합을 사용해서 여러개 셀랙터를 특정해서 좀더 디테일하게 고를 수 있다.

    하위( ), 자식(>), 형제 선택자, 그룹화

*/

/* li:last-of-type{
    color: red;
} */
/* 두 리스트들의 마지막 요소들이 바뀐다. 하지만 순서없는 모든 목록 요소 마지막애만 바꾸고싶은 상황 */

/* 하위선택자는 스페이싱 사용(스페이싱 앞의 요소에서~) 앞의 내용은 다양한 셀렉터 사용가능 ID 클래스등*/
#list li:last-of-type {
    color: red;
}


/* 리스트1/ol/리스트3과 리스트4가 같이 바뀜 -> 범위안에 있는 뒷쪽에 있는 조건이 만족하는애들이 바뀐것.
    자식의자식을찾는게아니라 바로 밑(하위) 자식만 바뀌고 싶을때 >를 사용하면 된다.  */
#list > li:last-of-type{
    color: blue;
}


/* 형제 선택자 */

/* 1. 일반 형제 선택자 결합 (~)
    ~앞에있는 선택자 뒤쪽에 위치해 있는 애들만 적용된다. 어떤요소가 특정요소 뒤에있을 때 코드요소뒤에 어떤 요소가 있더라도 p가 있다면 스타일링된다.
*/

code ~ p {
    color: red;
}

/* 2. 인접 형제 선택자 결합 (+)
    말그대로 인접한 요소만 고를수 있다. 코드 바로위 바로아래만 r가능 */

code + p {
    background-color: blue;
}
code + div {
    background-color: green;
}
/* 코드주변엔 div가 없기때문에 바뀌지 않음. */


/* 3. 그룹화 (,)
    동일한 스타일을 적용하고 싶을 때 */

p, span, code {
    color: purple;
}

